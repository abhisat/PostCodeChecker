// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PostCodeChecker /> Matches the snapshot 1`] = `
<PostCodeChecker>
  <div
    className="formContainer"
  >
    <form>
      <WithStyles(ForwardRef(FormControl))
        className="form"
      >
        <ForwardRef(FormControl)
          className="form"
          classes={
            Object {
              "fullWidth": "MuiFormControl-fullWidth",
              "marginDense": "MuiFormControl-marginDense",
              "marginNormal": "MuiFormControl-marginNormal",
              "root": "MuiFormControl-root",
            }
          }
        >
          <div
            className="MuiFormControl-root form"
          >
            <WithStyles(ForwardRef(Typography))
              className="formHeader"
            >
              <ForwardRef(Typography)
                className="formHeader"
                classes={
                  Object {
                    "alignCenter": "MuiTypography-alignCenter",
                    "alignJustify": "MuiTypography-alignJustify",
                    "alignLeft": "MuiTypography-alignLeft",
                    "alignRight": "MuiTypography-alignRight",
                    "body1": "MuiTypography-body1",
                    "body2": "MuiTypography-body2",
                    "button": "MuiTypography-button",
                    "caption": "MuiTypography-caption",
                    "colorError": "MuiTypography-colorError",
                    "colorInherit": "MuiTypography-colorInherit",
                    "colorPrimary": "MuiTypography-colorPrimary",
                    "colorSecondary": "MuiTypography-colorSecondary",
                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                    "displayBlock": "MuiTypography-displayBlock",
                    "displayInline": "MuiTypography-displayInline",
                    "gutterBottom": "MuiTypography-gutterBottom",
                    "h1": "MuiTypography-h1",
                    "h2": "MuiTypography-h2",
                    "h3": "MuiTypography-h3",
                    "h4": "MuiTypography-h4",
                    "h5": "MuiTypography-h5",
                    "h6": "MuiTypography-h6",
                    "noWrap": "MuiTypography-noWrap",
                    "overline": "MuiTypography-overline",
                    "paragraph": "MuiTypography-paragraph",
                    "root": "MuiTypography-root",
                    "srOnly": "MuiTypography-srOnly",
                    "subtitle1": "MuiTypography-subtitle1",
                    "subtitle2": "MuiTypography-subtitle2",
                  }
                }
              >
                <p
                  className="MuiTypography-root formHeader MuiTypography-body1"
                >
                  Find a Post Code
                </p>
              </ForwardRef(Typography)>
            </WithStyles(ForwardRef(Typography))>
            <WithStyles(ForwardRef(TextField))
              className="textField"
              id="standard-name"
              label="Post Code"
              margin="normal"
              type="text"
            >
              <ForwardRef(TextField)
                className="textField"
                classes={
                  Object {
                    "root": "MuiTextField-root",
                  }
                }
                id="standard-name"
                label="Post Code"
                margin="normal"
                type="text"
              >
                <WithStyles(ForwardRef(FormControl))
                  className="MuiTextField-root textField"
                  margin="normal"
                  required={false}
                  variant="standard"
                >
                  <ForwardRef(FormControl)
                    className="MuiTextField-root textField"
                    classes={
                      Object {
                        "fullWidth": "MuiFormControl-fullWidth",
                        "marginDense": "MuiFormControl-marginDense",
                        "marginNormal": "MuiFormControl-marginNormal",
                        "root": "MuiFormControl-root",
                      }
                    }
                    margin="normal"
                    required={false}
                    variant="standard"
                  >
                    <div
                      className="MuiFormControl-root MuiTextField-root textField MuiFormControl-marginNormal"
                    >
                      <WithStyles(ForwardRef(InputLabel))
                        htmlFor="standard-name"
                      >
                        <ForwardRef(InputLabel)
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated",
                              "asterisk": "MuiInputLabel-asterisk",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "filled": "MuiInputLabel-filled",
                              "focused": "Mui-focused",
                              "formControl": "MuiInputLabel-formControl",
                              "marginDense": "MuiInputLabel-marginDense",
                              "outlined": "MuiInputLabel-outlined",
                              "required": "Mui-required",
                              "root": "MuiInputLabel-root",
                              "shrink": "MuiInputLabel-shrink",
                            }
                          }
                          htmlFor="standard-name"
                        >
                          <WithStyles(ForwardRef(FormLabel))
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                            classes={
                              Object {
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "required": "Mui-required",
                              }
                            }
                            data-shrink={false}
                            htmlFor="standard-name"
                          >
                            <ForwardRef(FormLabel)
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "filled": "MuiFormLabel-filled",
                                  "focused": "Mui-focused Mui-focused",
                                  "required": "Mui-required Mui-required",
                                  "root": "MuiFormLabel-root",
                                }
                              }
                              data-shrink={false}
                              htmlFor="standard-name"
                            >
                              <label
                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                data-shrink={false}
                                htmlFor="standard-name"
                              >
                                Post Code
                              </label>
                            </ForwardRef(FormLabel)>
                          </WithStyles(ForwardRef(FormLabel))>
                        </ForwardRef(InputLabel)>
                      </WithStyles(ForwardRef(InputLabel))>
                      <WithStyles(ForwardRef(Input))
                        id="standard-name"
                        type="text"
                      >
                        <ForwardRef(Input)
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "multiline": "MuiInput-multiline",
                              "root": "MuiInput-root",
                              "underline": "MuiInput-underline",
                            }
                          }
                          id="standard-name"
                          type="text"
                        >
                          <WithStyles(ForwardRef(InputBase))
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root MuiInput-underline",
                                "underline": null,
                              }
                            }
                            fullWidth={false}
                            id="standard-name"
                            inputComponent="input"
                            multiline={false}
                            type="text"
                          >
                            <ForwardRef(InputBase)
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused",
                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                  "input": "MuiInputBase-input MuiInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                  "inputSelect": "MuiInputBase-inputSelect",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                }
                              }
                              fullWidth={false}
                              id="standard-name"
                              inputComponent="input"
                              multiline={false}
                              type="text"
                            >
                              <div
                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                onClick={[Function]}
                              >
                                <input
                                  aria-invalid={false}
                                  className="MuiInputBase-input MuiInput-input"
                                  disabled={false}
                                  id="standard-name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  type="text"
                                />
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(Input)>
                      </WithStyles(ForwardRef(Input))>
                    </div>
                  </ForwardRef(FormControl)>
                </WithStyles(ForwardRef(FormControl))>
              </ForwardRef(TextField)>
            </WithStyles(ForwardRef(TextField))>
            <WithStyles(ForwardRef(TextField))
              className="textField"
              id="standard-name"
              label="Suburb"
              margin="normal"
              type="text"
            >
              <ForwardRef(TextField)
                className="textField"
                classes={
                  Object {
                    "root": "MuiTextField-root",
                  }
                }
                id="standard-name"
                label="Suburb"
                margin="normal"
                type="text"
              >
                <WithStyles(ForwardRef(FormControl))
                  className="MuiTextField-root textField"
                  margin="normal"
                  required={false}
                  variant="standard"
                >
                  <ForwardRef(FormControl)
                    className="MuiTextField-root textField"
                    classes={
                      Object {
                        "fullWidth": "MuiFormControl-fullWidth",
                        "marginDense": "MuiFormControl-marginDense",
                        "marginNormal": "MuiFormControl-marginNormal",
                        "root": "MuiFormControl-root",
                      }
                    }
                    margin="normal"
                    required={false}
                    variant="standard"
                  >
                    <div
                      className="MuiFormControl-root MuiTextField-root textField MuiFormControl-marginNormal"
                    >
                      <WithStyles(ForwardRef(InputLabel))
                        htmlFor="standard-name"
                      >
                        <ForwardRef(InputLabel)
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated",
                              "asterisk": "MuiInputLabel-asterisk",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "filled": "MuiInputLabel-filled",
                              "focused": "Mui-focused",
                              "formControl": "MuiInputLabel-formControl",
                              "marginDense": "MuiInputLabel-marginDense",
                              "outlined": "MuiInputLabel-outlined",
                              "required": "Mui-required",
                              "root": "MuiInputLabel-root",
                              "shrink": "MuiInputLabel-shrink",
                            }
                          }
                          htmlFor="standard-name"
                        >
                          <WithStyles(ForwardRef(FormLabel))
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                            classes={
                              Object {
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "required": "Mui-required",
                              }
                            }
                            data-shrink={false}
                            htmlFor="standard-name"
                          >
                            <ForwardRef(FormLabel)
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "filled": "MuiFormLabel-filled",
                                  "focused": "Mui-focused Mui-focused",
                                  "required": "Mui-required Mui-required",
                                  "root": "MuiFormLabel-root",
                                }
                              }
                              data-shrink={false}
                              htmlFor="standard-name"
                            >
                              <label
                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                data-shrink={false}
                                htmlFor="standard-name"
                              >
                                Suburb
                              </label>
                            </ForwardRef(FormLabel)>
                          </WithStyles(ForwardRef(FormLabel))>
                        </ForwardRef(InputLabel)>
                      </WithStyles(ForwardRef(InputLabel))>
                      <WithStyles(ForwardRef(Input))
                        id="standard-name"
                        type="text"
                      >
                        <ForwardRef(Input)
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "multiline": "MuiInput-multiline",
                              "root": "MuiInput-root",
                              "underline": "MuiInput-underline",
                            }
                          }
                          id="standard-name"
                          type="text"
                        >
                          <WithStyles(ForwardRef(InputBase))
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root MuiInput-underline",
                                "underline": null,
                              }
                            }
                            fullWidth={false}
                            id="standard-name"
                            inputComponent="input"
                            multiline={false}
                            type="text"
                          >
                            <ForwardRef(InputBase)
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused",
                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                  "input": "MuiInputBase-input MuiInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                  "inputSelect": "MuiInputBase-inputSelect",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                }
                              }
                              fullWidth={false}
                              id="standard-name"
                              inputComponent="input"
                              multiline={false}
                              type="text"
                            >
                              <div
                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                onClick={[Function]}
                              >
                                <input
                                  aria-invalid={false}
                                  className="MuiInputBase-input MuiInput-input"
                                  disabled={false}
                                  id="standard-name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  type="text"
                                />
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(Input)>
                      </WithStyles(ForwardRef(Input))>
                    </div>
                  </ForwardRef(FormControl)>
                </WithStyles(ForwardRef(FormControl))>
              </ForwardRef(TextField)>
            </WithStyles(ForwardRef(TextField))>
            <WithStyles(ForwardRef(Select))
              className="dropDown"
              displayEmpty={true}
            >
              <ForwardRef(Select)
                className="dropDown"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "filled": "MuiSelect-filled",
                    "icon": "MuiSelect-icon",
                    "outlined": "MuiSelect-outlined",
                    "root": "MuiSelect-root",
                    "select": "MuiSelect-select",
                    "selectMenu": "MuiSelect-selectMenu",
                  }
                }
                displayEmpty={true}
              >
                <WithStyles(ForwardRef(Input))
                  className="dropDown"
                  inputComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "IconComponent": [Function],
                        "MenuProps": [Function],
                        "SelectDisplayProps": [Function],
                        "autoFocus": [Function],
                        "autoWidth": [Function],
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "disabled": [Function],
                        "displayEmpty": [Function],
                        "inputRef": [Function],
                        "multiple": [Function],
                        "name": [Function],
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onClose": [Function],
                        "onFocus": [Function],
                        "onOpen": [Function],
                        "open": [Function],
                        "readOnly": [Function],
                        "renderValue": [Function],
                        "required": [Function],
                        "tabIndex": [Function],
                        "type": [Function],
                        "value": [Function],
                        "variant": [Function],
                      },
                      "render": [Function],
                    }
                  }
                  inputProps={
                    Object {
                      "IconComponent": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "displayName": "ArrowDropDownIcon",
                        "muiName": "SvgIcon",
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "MenuProps": undefined,
                      "SelectDisplayProps": undefined,
                      "autoWidth": false,
                      "children": Array [
                        <ForwardRef(WithStyles)
                          disabled={true}
                          value=""
                        >
                          <em>
                            State
                          </em>
                        </ForwardRef(WithStyles)>,
                        <ForwardRef(WithStyles)
                          value="NSW"
                        >
                          NSW
                        </ForwardRef(WithStyles)>,
                        <ForwardRef(WithStyles)
                          value="VIC"
                        >
                          VIC
                        </ForwardRef(WithStyles)>,
                        <ForwardRef(WithStyles)
                          value="SA"
                        >
                          SA
                        </ForwardRef(WithStyles)>,
                        <ForwardRef(WithStyles)
                          value="WA"
                        >
                          WA
                        </ForwardRef(WithStyles)>,
                        <ForwardRef(WithStyles)
                          value="NT"
                        >
                          NT
                        </ForwardRef(WithStyles)>,
                        <ForwardRef(WithStyles)
                          value="TAS"
                        >
                          TAS
                        </ForwardRef(WithStyles)>,
                      ],
                      "classes": Object {
                        "disabled": "Mui-disabled",
                        "filled": "MuiSelect-filled",
                        "icon": "MuiSelect-icon",
                        "outlined": "MuiSelect-outlined",
                        "root": "MuiSelect-root",
                        "select": "MuiSelect-select",
                        "selectMenu": "MuiSelect-selectMenu",
                      },
                      "displayEmpty": true,
                      "multiple": false,
                      "onClose": undefined,
                      "onOpen": undefined,
                      "open": undefined,
                      "renderValue": undefined,
                      "type": undefined,
                      "variant": "standard",
                    }
                  }
                  select={true}
                >
                  <ForwardRef(Input)
                    className="dropDown"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "formControl": "MuiInput-formControl",
                        "fullWidth": "MuiInput-fullWidth",
                        "input": "MuiInput-input",
                        "inputMarginDense": "MuiInput-inputMarginDense",
                        "inputMultiline": "MuiInput-inputMultiline",
                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                        "multiline": "MuiInput-multiline",
                        "root": "MuiInput-root",
                        "underline": "MuiInput-underline",
                      }
                    }
                    inputComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "IconComponent": [Function],
                          "MenuProps": [Function],
                          "SelectDisplayProps": [Function],
                          "autoFocus": [Function],
                          "autoWidth": [Function],
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "disabled": [Function],
                          "displayEmpty": [Function],
                          "inputRef": [Function],
                          "multiple": [Function],
                          "name": [Function],
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onClose": [Function],
                          "onFocus": [Function],
                          "onOpen": [Function],
                          "open": [Function],
                          "readOnly": [Function],
                          "renderValue": [Function],
                          "required": [Function],
                          "tabIndex": [Function],
                          "type": [Function],
                          "value": [Function],
                          "variant": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    inputProps={
                      Object {
                        "IconComponent": Object {
                          "$$typeof": Symbol(react.memo),
                          "compare": null,
                          "displayName": "ArrowDropDownIcon",
                          "muiName": "SvgIcon",
                          "type": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                        },
                        "MenuProps": undefined,
                        "SelectDisplayProps": undefined,
                        "autoWidth": false,
                        "children": Array [
                          <ForwardRef(WithStyles)
                            disabled={true}
                            value=""
                          >
                            <em>
                              State
                            </em>
                          </ForwardRef(WithStyles)>,
                          <ForwardRef(WithStyles)
                            value="NSW"
                          >
                            NSW
                          </ForwardRef(WithStyles)>,
                          <ForwardRef(WithStyles)
                            value="VIC"
                          >
                            VIC
                          </ForwardRef(WithStyles)>,
                          <ForwardRef(WithStyles)
                            value="SA"
                          >
                            SA
                          </ForwardRef(WithStyles)>,
                          <ForwardRef(WithStyles)
                            value="WA"
                          >
                            WA
                          </ForwardRef(WithStyles)>,
                          <ForwardRef(WithStyles)
                            value="NT"
                          >
                            NT
                          </ForwardRef(WithStyles)>,
                          <ForwardRef(WithStyles)
                            value="TAS"
                          >
                            TAS
                          </ForwardRef(WithStyles)>,
                        ],
                        "classes": Object {
                          "disabled": "Mui-disabled",
                          "filled": "MuiSelect-filled",
                          "icon": "MuiSelect-icon",
                          "outlined": "MuiSelect-outlined",
                          "root": "MuiSelect-root",
                          "select": "MuiSelect-select",
                          "selectMenu": "MuiSelect-selectMenu",
                        },
                        "displayEmpty": true,
                        "multiple": false,
                        "onClose": undefined,
                        "onOpen": undefined,
                        "open": undefined,
                        "renderValue": undefined,
                        "type": undefined,
                        "variant": "standard",
                      }
                    }
                    select={true}
                  >
                    <WithStyles(ForwardRef(InputBase))
                      className="dropDown"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "formControl": "MuiInput-formControl",
                          "fullWidth": "MuiInput-fullWidth",
                          "input": "MuiInput-input",
                          "inputMarginDense": "MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                          "multiline": "MuiInput-multiline",
                          "root": "MuiInput-root MuiInput-underline",
                          "underline": null,
                        }
                      }
                      fullWidth={false}
                      inputComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "IconComponent": [Function],
                            "MenuProps": [Function],
                            "SelectDisplayProps": [Function],
                            "autoFocus": [Function],
                            "autoWidth": [Function],
                            "children": [Function],
                            "className": [Function],
                            "classes": [Function],
                            "disabled": [Function],
                            "displayEmpty": [Function],
                            "inputRef": [Function],
                            "multiple": [Function],
                            "name": [Function],
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onClose": [Function],
                            "onFocus": [Function],
                            "onOpen": [Function],
                            "open": [Function],
                            "readOnly": [Function],
                            "renderValue": [Function],
                            "required": [Function],
                            "tabIndex": [Function],
                            "type": [Function],
                            "value": [Function],
                            "variant": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      inputProps={
                        Object {
                          "IconComponent": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "displayName": "ArrowDropDownIcon",
                            "muiName": "SvgIcon",
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                          },
                          "MenuProps": undefined,
                          "SelectDisplayProps": undefined,
                          "autoWidth": false,
                          "children": Array [
                            <ForwardRef(WithStyles)
                              disabled={true}
                              value=""
                            >
                              <em>
                                State
                              </em>
                            </ForwardRef(WithStyles)>,
                            <ForwardRef(WithStyles)
                              value="NSW"
                            >
                              NSW
                            </ForwardRef(WithStyles)>,
                            <ForwardRef(WithStyles)
                              value="VIC"
                            >
                              VIC
                            </ForwardRef(WithStyles)>,
                            <ForwardRef(WithStyles)
                              value="SA"
                            >
                              SA
                            </ForwardRef(WithStyles)>,
                            <ForwardRef(WithStyles)
                              value="WA"
                            >
                              WA
                            </ForwardRef(WithStyles)>,
                            <ForwardRef(WithStyles)
                              value="NT"
                            >
                              NT
                            </ForwardRef(WithStyles)>,
                            <ForwardRef(WithStyles)
                              value="TAS"
                            >
                              TAS
                            </ForwardRef(WithStyles)>,
                          ],
                          "classes": Object {
                            "disabled": "Mui-disabled",
                            "filled": "MuiSelect-filled",
                            "icon": "MuiSelect-icon",
                            "outlined": "MuiSelect-outlined",
                            "root": "MuiSelect-root",
                            "select": "MuiSelect-select",
                            "selectMenu": "MuiSelect-selectMenu",
                          },
                          "displayEmpty": true,
                          "multiple": false,
                          "onClose": undefined,
                          "onOpen": undefined,
                          "open": undefined,
                          "renderValue": undefined,
                          "type": undefined,
                          "variant": "standard",
                        }
                      }
                      multiline={false}
                      select={true}
                      type="text"
                    >
                      <ForwardRef(InputBase)
                        className="dropDown"
                        classes={
                          Object {
                            "adornedEnd": "MuiInputBase-adornedEnd",
                            "adornedStart": "MuiInputBase-adornedStart",
                            "disabled": "Mui-disabled Mui-disabled",
                            "error": "Mui-error Mui-error",
                            "focused": "Mui-focused Mui-focused",
                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                            "input": "MuiInputBase-input MuiInput-input",
                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                            "inputSelect": "MuiInputBase-inputSelect",
                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                            "marginDense": "MuiInputBase-marginDense",
                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                          }
                        }
                        fullWidth={false}
                        inputComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "IconComponent": [Function],
                              "MenuProps": [Function],
                              "SelectDisplayProps": [Function],
                              "autoFocus": [Function],
                              "autoWidth": [Function],
                              "children": [Function],
                              "className": [Function],
                              "classes": [Function],
                              "disabled": [Function],
                              "displayEmpty": [Function],
                              "inputRef": [Function],
                              "multiple": [Function],
                              "name": [Function],
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onClose": [Function],
                              "onFocus": [Function],
                              "onOpen": [Function],
                              "open": [Function],
                              "readOnly": [Function],
                              "renderValue": [Function],
                              "required": [Function],
                              "tabIndex": [Function],
                              "type": [Function],
                              "value": [Function],
                              "variant": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        inputProps={
                          Object {
                            "IconComponent": Object {
                              "$$typeof": Symbol(react.memo),
                              "compare": null,
                              "displayName": "ArrowDropDownIcon",
                              "muiName": "SvgIcon",
                              "type": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                            },
                            "MenuProps": undefined,
                            "SelectDisplayProps": undefined,
                            "autoWidth": false,
                            "children": Array [
                              <ForwardRef(WithStyles)
                                disabled={true}
                                value=""
                              >
                                <em>
                                  State
                                </em>
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="NSW"
                              >
                                NSW
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="VIC"
                              >
                                VIC
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="SA"
                              >
                                SA
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="WA"
                              >
                                WA
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="NT"
                              >
                                NT
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="TAS"
                              >
                                TAS
                              </ForwardRef(WithStyles)>,
                            ],
                            "classes": Object {
                              "disabled": "Mui-disabled",
                              "filled": "MuiSelect-filled",
                              "icon": "MuiSelect-icon",
                              "outlined": "MuiSelect-outlined",
                              "root": "MuiSelect-root",
                              "select": "MuiSelect-select",
                              "selectMenu": "MuiSelect-selectMenu",
                            },
                            "displayEmpty": true,
                            "multiple": false,
                            "onClose": undefined,
                            "onOpen": undefined,
                            "open": undefined,
                            "renderValue": undefined,
                            "type": undefined,
                            "variant": "standard",
                          }
                        }
                        multiline={false}
                        select={true}
                        type="text"
                      >
                        <div
                          className="MuiInputBase-root MuiInput-root MuiInput-underline dropDown MuiInputBase-formControl MuiInput-formControl"
                          onClick={[Function]}
                        >
                          <ForwardRef(SelectInput)
                            IconComponent={
                              Object {
                                "$$typeof": Symbol(react.memo),
                                "compare": null,
                                "displayName": "ArrowDropDownIcon",
                                "muiName": "SvgIcon",
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                              }
                            }
                            aria-invalid={false}
                            autoWidth={false}
                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputSelect"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              }
                            }
                            disabled={false}
                            displayEmpty={true}
                            inputRef={[Function]}
                            multiple={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            variant="standard"
                          >
                            <div
                              aria-haspopup="listbox"
                              className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input MuiInputBase-inputSelect"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "&#8203;",
                                  }
                                }
                              />
                            </div>
                            <input
                              type="hidden"
                            />
                            <ForwardRef
                              className="MuiSelect-icon"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                className="MuiSelect-icon"
                              >
                                <ForwardRef(SvgIcon)
                                  className="MuiSelect-icon"
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root MuiSelect-icon"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M7 10l5 5 5-5z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                            <WithStyles(ForwardRef(Menu))
                              MenuListProps={
                                Object {
                                  "disableListWrap": true,
                                  "role": "listbox",
                                }
                              }
                              PaperProps={
                                Object {
                                  "style": Object {
                                    "minWidth": undefined,
                                  },
                                }
                              }
                              anchorEl={null}
                              id="menu-"
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Menu)
                                MenuListProps={
                                  Object {
                                    "disableListWrap": true,
                                    "role": "listbox",
                                  }
                                }
                                PaperProps={
                                  Object {
                                    "style": Object {
                                      "minWidth": undefined,
                                    },
                                  }
                                }
                                anchorEl={null}
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="menu-"
                                onClose={[Function]}
                                open={false}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                      "style": Object {
                                        "minWidth": undefined,
                                      },
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="menu-"
                                  onClose={[Function]}
                                  onEntering={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                        "style": Object {
                                          "minWidth": undefined,
                                        },
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="menu-"
                                    onClose={[Function]}
                                    onEntering={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      id="menu-"
                                      onClose={[Function]}
                                      open={false}
                                    />
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </ForwardRef(SelectInput)>
                        </div>
                      </ForwardRef(InputBase)>
                    </WithStyles(ForwardRef(InputBase))>
                  </ForwardRef(Input)>
                </WithStyles(ForwardRef(Input))>
              </ForwardRef(Select)>
            </WithStyles(ForwardRef(Select))>
            <WithStyles(ForwardRef(Button))
              className="button"
              color="primary"
              type="submit"
              value="Submit"
              variant="contained"
            >
              <ForwardRef(Button)
                className="button"
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit",
                    "contained": "MuiButton-contained",
                    "containedPrimary": "MuiButton-containedPrimary",
                    "containedSecondary": "MuiButton-containedSecondary",
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "fullWidth": "MuiButton-fullWidth",
                    "label": "MuiButton-label",
                    "outlined": "MuiButton-outlined",
                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                    "root": "MuiButton-root",
                    "sizeLarge": "MuiButton-sizeLarge",
                    "sizeSmall": "MuiButton-sizeSmall",
                    "text": "MuiButton-text",
                    "textPrimary": "MuiButton-textPrimary",
                    "textSecondary": "MuiButton-textSecondary",
                  }
                }
                color="primary"
                type="submit"
                value="Submit"
                variant="contained"
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiButton-root button MuiButton-contained MuiButton-containedPrimary"
                  component="button"
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  type="submit"
                  value="Submit"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiButton-root button MuiButton-contained MuiButton-containedPrimary"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="button"
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    type="submit"
                    value="Submit"
                  >
                    <button
                      className="MuiButtonBase-root MuiButton-root button MuiButton-contained MuiButton-containedPrimary"
                      disabled={false}
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={0}
                      type="submit"
                      value="Submit"
                    >
                      <span
                        className="MuiButton-label"
                      >
                        Check Address
                      </span>
                      <NoSsr>
                        <WithStyles(undefined)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(undefined)>
                      </NoSsr>
                    </button>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(Button)>
            </WithStyles(ForwardRef(Button))>
          </div>
        </ForwardRef(FormControl)>
      </WithStyles(ForwardRef(FormControl))>
    </form>
  </div>
</PostCodeChecker>
`;
